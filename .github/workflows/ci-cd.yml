name: CI/CD for Regiao API

on:
  push:
    branches: [ "main" ]  # Executa o pipeline ao push na branch main
  pull_request:
    branches: [ "main" ]  # Executa em pull requests na branch main

jobs:
  build-and-test:

    strategy:
      matrix:
        configuration: [Release]  # Mantido simples, mas pode incluir "Debug" se necessário

    runs-on: ubuntu-latest  # Runner do GitHub Actions

    env:
      Solution_Name: FIAP.APIRegiao/FIAP.APIRegiao.sln  # Nome da sua solução no diretório raiz
      Api_Project_Path: FIAP.APIRegiao/FIAP.APIRegiao.csproj
      Test_Project_Path: APIRegioes.Testes/APIRegioes.Testes.csproj

    steps:
    # 1. Check-out do código
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Instalação do SDK .NET 8.0
    - name: Set up .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # 3. Restaurar dependências da solução
    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    # 4. Compilar a solução inteira (com testes inclusos)
    - name: Build solution
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

    # 5. Executar testes unitários
    - name: Run unit tests
      run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ matrix.configuration }} --no-build --logger "trx"

    # 6. Publicar a API (pacote pronto para deployment)
    - name: Publish API
      run: dotnet publish ${{ env.Api_Project_Path }} --configuration ${{ matrix.configuration }} --output ./publish

    # 7. Upload dos artefatos de build (opcional)
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-build
        path: ./publish
